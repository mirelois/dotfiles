set -s escape-time 0
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -s extended-keys always

bind-key x kill-pane -a

set -g mouse on

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind-key -n C-k send-keys C-K

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

set -g history-limit 5000

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
bind-key -n C-S-h if -F '#{@pane-is-vim}' { send-keys C-S-H } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
bind-key -n C-S-j if -F '#{@pane-is-vim}' { send-keys C-S-J } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n C-S-k if -F '#{@pane-is-vim}' { send-keys C-S-K } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
bind-key -n C-S-l if -F '#{@pane-is-vim}' { send-keys C-S-L } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-S-h' select-pane -L
bind-key -T copy-mode-vi 'C-S-j' select-pane -D
bind-key -T copy-mode-vi 'C-S-k' select-pane -U
bind-key -T copy-mode-vi 'C-S-l' select-pane -R

set -g focus-events on
set -g status-style 'bg=default fg=#E1ACFF'
set -g status-left-length 90
set -g status-right-length 90
set -g status-justify centre

unbind %
bind | split-window -h -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"

bind r source-file ~/.config/tmux/tmux.conf
set -g base-index 1

set-window-option -g mode-keys vi
bind Enter copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind -n "C-S-n" next-window
bind -n "C-S-p" previous-window

bind-key Tab switch-client -l

# vim-like pane switching
bind ^ last-window
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

bind m resize-pane -Z

bind -r w kill-pane

# forget the find window.  That is for chumps
bind-key -n C-f run-shell "tmux neww ~/bin/tmux-sessionizer"
bind-key -r f run-shell "tmux neww ~/bin/tmux-sessionizer"
bind-key -r i run-shell "tmux neww ~/bin/tmux-cht.sh" 
bind-key -r \~ run-shell "tmux neww ~/bin/tmux-sessionizer ~/"

# tmp plugin
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'niksingh710/minimal-tmux-status'

# Optional configurations with their default values if omitted:


run '~/.config/tmux/plugins/tpm/tpm'
